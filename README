This file is part of RaSt mod_ecl.

RaSt mod_ecl is an extension module for  the Apache HTTP Server.  It enables the
Apache  HTTP  Server  to  run  scripts written  in  the  Embeddable  Common-Lisp
language.

Copyright (C) 2021 Ralf Stephan (RaSt) <me@ralf-stephan.name>

Copying  and  distribution of  this  file,  with  or without  modification,  are
permitted in any  medium without royalty provided the copyright  notice and this
notice are preserved.  This file is offered as-is, without any warranty.

================================================================================

Contents
--------

About
Install
Usage
Development
Copying
Changelog
References
Todo

================================================================================

About
-----

================================================================================

Install
-------

You can download the source code from:

https://github.com/RaStBh/mod_ecl
https://gitlab.com/RaStBh/mod_ecl

Download the latest Version.

================================================================================

Usage
-----

Apache HTTP Server 2.x configuration:

Create the /etc/apache2/mods-available/ecl.load file with following content:

    LoadModule ecl_module /usr/lib/apache2/modules/mod_ecl.so

Create the /etc/apache2/mods-available/ecl.conf file with following content:

    # Handle all files with file xtension .ecl by the mod_ecl module.

    <FilesMatch ".+\.ecl$">
        SetHandler application/x-httpd-ecl
    </FilesMatch>

    # Deny access to files without filename (e.g. '.ecl')

    <FilesMatch "^\.ecl$">
        Require all denied
    </FilesMatch>

Enable the extension  module using the a2enmod command.  You  might require root
privileges to do this.

    bash$> a2enmod ecl

Restart the Apache  HTTP Server using the apachectl command.   You might require
root privileges to do this.

    bash$> apachectl restart

Create a file test.ecl in e.g. /var/www/html/ containing some content.

    bash$> touch /var/www/html/mod_ecl/test.ecl

Change to the source directory.

    bash$> cd $DIR/mod_ecl/src/

Compile module using the make command.

    bash$> make

Install module using the make command.  You might require root privileges to do
this.

    bash$> make install

Restart the Apache  HTTP Server using the make command.   You might require root
privileges to do this.

    bashÂ§> make restart

Build  doxygen documentation  using the  make command.   You might  require root
privileges to do this.

    bash$> make doc

Using the lynx command

    bash$> lynx -mime_header http://localhost/mod_ecl/test.ecl

should show an output similar to the following:

    <!DODCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>        <title>RaSt mod_ecl</title>
        </head>
        <body>
            Hello World!<br>
            <br>
            This is the sample page from RaSt mod_ecl!<br>
            <br>
            file name:<br>
            /var/www/html/mod_ecl/test.ecl<br>
            <br>
            file content:<br>
            ===== Begin =====<br>
    Hello from test.ecl!<br>
            ===== END =======<br>
        </body>
    </html>

================================================================================

Development
-----------

My development environment is:

    Debian GNU/Linux 9.13 (stretch)
    Apache HTTP Server 2.4.25
    Embeddable  Common-Lisp (EXL) 15.3.7
    Apache Portable Runtime (APR) 1.5.2
    Apache Portable Runtime Utility Library (APR-util) 1.5.4
    Apache HTTP Request Library 2.13

To create an example module to test your environment you can generate a template
module by using the APache eXtenSion tool (apxs).

Generate template using the apxs command.

    bash$> apxs -g -n ecl

This creates the ecl/ directory and within the template files.

    ecl/.deps
    ecl/Makefile
    ecl/mod_ecl.c
    ecl/modules.mk

Move this files to the $HOME/mod_ecl/src/ source code directory.

Compile the extension module into a DSO file.

    bash> apxs -c ./mod_ecl.c

Then install  the extension  module.  You  might require  root privileges  to do
this.

    bash> apxs -i ./mod_ecl.la

The    extension    module    mod_ecl.so    file    is    installed    in    the
/usr/lib/apache2/modules/ directory.

Create the /etc/apache2/mods-available/ecl.load file with following content:

    LoadModule ecl_module /usr/lib/apache2/modules/mod_ecl.so

Create the /etc/apache2/mods-available/ecl.conf file with following content:

    <IfModule mod_ecl.c>
        <Location /mod_ecl>
            SetHandler ecl
        </Location>
    </IfModule>

Enable the extension  module using the a2enmod command.  You  might require root
privileges to do this.

    bash$> a2enmod ecl

Restart the Apache  HTTP Server using the apachectl command.   You might require
root privileges to do this.

    bash$> apachectl restart

Create the /var/www/html/mod_ecl/ directory.

    bash$> mkdir /var/www/html/mod_ecl/

You now should be able to requet the URLs

    http://localhost/mod_ecl
    http://127.0.0.1/mod_ecl

and you should read the string 'The sample page from mod_ecl.c'.

For example using the lynx command

    bash$> lynx -mime_header http://localhost/mod_ecl/

should show an output similar to the following:

    HTTP/1.1 200 OK
    Date: Wed, 10 Mar 2021 08:10:35 GMT
    Server: Apache/2.4.25 (Debian)
    Content-Length: 31
    Connection: close
    Content-Type: text/html

    The sample page from mod_ecl.c

You can use the make command. You might require root privileges to do this.  But
I will not cover  the usage of make here, I just list  some of the make commands
here.

    bash$> cd $HOME/mod_ecl/src/

    bash$> make

    bash$> make install

    bash$> make test

    bash$> make clean

================================================================================

Copying
-------

// RaSt mod_ecl is  an extension module for the Apache  HTTP Server.  It enables
// the Apache HTTP  Server to run scripts written in  the Embeddable Common-Lisp
// language.
//
// Copyright (C) 2021 Ralf Stephan (RaSt) <me@ralf-stephan.name>
//
// RaSt mod_ecl is free software: you can redistribute it and/or modify it under
// the terms of the GNU General Public License as published by the Free Software
// Foundation, either  version 3 of the  License, or (at your  option) any later
// version.
//
// RaSt mod_ecl is distributed  in the hope that it will  be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR  A PARTICULAR  PURPOSE.   See the  GNU General  Public  License for  more
// details.
//
// You should have received a copy of  the GNU General Public License along with
// this     program     in     the     file    COPYING.      If     not,     see
// <https://www.gnu.org/licenses/>.

================================================================================

Changelog
---------

0.0.0

    Nothing special here.

0.1.0

    This version is a basic Apache HTTP Server extension which does nothing more
    than to output the string "Hello World".

0.1.1

    Introducing  doxygen  for  documentation.  Adding  proper  comments.   Small
    changes to the code.  And other changes.

0.1.2

    Add notes about usage.

0.1.3

    Add missing comment.

0.2.0

    Read file and output its content. And other changes.

0.2.1

    Fix whitespace and spelling.

0.2.2

  Add missing comment.

0.2.3

  Some Refactoring.

================================================================================

References
----------

Apache HTTP Server

[LL02]

    Ben Laurie,  Peter Laurie.  Apache:  The Definitive Guide.   O'Reilly Media,
    Inc.  3th Edition.  December 2002.  -- ISBN: 978-0-596-00203-9

[SM99]

    Lincoln Stein,  Doug MacEachern.   Writing Apache Modules  with Perl  and C.
    O'Reilly & Associates, Inc.  March 1999.  -- ISBN: 978-1-565-92567-0

[1615296743]

    The Apache Software Foundation.  The  Apache HTTP Server Project.  2020.  --
    URL: <https://httpd.apache.org/> (online: 2021-03-09 13:32:23 +0000)

[1615297216]

    The   Apache  Software   Foundation.    Apache  HTTP   Server  Version   2.4
    Documentation.    2020.   --   URL:  <https://httpd.apache.org/docs/2.4/en/>
    (online: 2021-03-09 13:40:16 +0000)

    see also:
    /usr/share/doc/apache2-doc/

[1615297807]

    The Apache Software Foundation.  Developer Documentation for the Apache HTTP
    Server   2.4.    2020.    --   URL:   <https://httpd.apache.org/docs/2.4/en/
    developer/> (online: 2021-03-09 13:50:07 +0000)

[1615449618]

    The Apache  Software Foundation.   Module Index.   2020.  --  URL: <https://
    httpd.apache.org/docs/2.4/en/mod/> (online: 2021-03-11 08:00:18 +0000)

[1615449737]

    The Apache Software Foundation.  Apache Module mod_example_hooks.  2020.  --
    URL:       <https://httpd.apache.org/docs/2.4/en/mod/mod_example_hooks.html>
    (online: 2021-03-11 08:02:17 +0000)

    see also:
    httpd-2.4.25\modules\examples\
    httpd-2.4.25\modules\examples\README
    httpd-2.4.25\modules\examples\mod_case_filter.c
    httpd-2.4.25\modules\examples\mod_case_filter_in.c
    httpd-2.4.25\modules\examples\mod_example_hooks.c
    httpd-2.4.25\modules\examples\mod_example_ipc.c

[1615386286]

    The  Apache Software  Foundation.   Apache Module  mod_so.   2020.  --  URL:
    <https://httpd.apache.org/docs/2.4/en/mod/mod_so.html>  (online:  2021-03-10
    14:24:46 +0000)

[1615298253]

    The  Apache Software  Foundation.  Developing  modules for  the Apache  HTTP
    Server   2.4.    2020.    --   URL:   <https://httpd.apache.org/docs/2.4/en/
    developer/modguide.html> (online: 2021-03-09 13:57:33 +0000)

[1615450908]

    The Apache  Software Foundation.  Hook  Functions in the Apache  HTTP Server
    2.x.   2020.  --  URL: <https://httpd.apache.org/docs/2.4/en/developer/hooks
    .html> (online: 2021-03-11 08:21:48 +0000)

[1615451523]

    The  Apache Software  Foundation.   Request Processing  in  the Apache  HTTP
    Server   2.x.    2020.    --   URL:   <https://httpd.apache.org/docs/2.4/en/
    developer/request.html> (online: 2021-03-11 08:32:03 +0000)

[1615569331]

    The Apache Software Foundation.  How filters  work in Apache 2.0.  2020.  --
    URL:  <https://httpd.apache.org/docs/2.4/en/developer/filters.html> (online:
    2021-03-12 17:15:31 +0000)

[1615572244]

    The Apache Software Foundation.  Guide to writing output filters.  2020.  --
    URL:    <https://httpd.apache.org/docs/2.4/en/developer/output-filters.html>
    (online: 2021-03-12 18:04:04 +0000)

[1615617303]

    The Apache Software Foundation.  Documenting  code in Apache 2.4.  2020.  --
    URL:       <https://httpd.apache.org/docs/2.4/en/developer/documenting.html>
    (online: 2021-03-13 06:35:03 +0000)

[1615618803]

    The  Apache  Software Foundation.   Apache  HTTP  Server 2.x  Thread  Safety
    Issues.   2020.   --  URL:  <https://httpd.apache.org/docs/2.4/en/developer/
    thread_safety.html> (online: 2021-03-13 07:00:03 +0000)

[1615625036]

    The Apache Software Foundation.  Dynamic Shared Object (DSO) Support.  2020.
    -- <URL: https://httpd.apache.org/docs/current/dso.html> (online: 2021-03-13
    08:43:56 +0000)

[1615452234]

    The  Apache Software  Foundation.   Apache2 Documentation.   2020.  --  URL:
    <https://ci.apache.org/projects> (online: 2021-03-11 08:43:54 +0000)

[1615451871]

    The Apache Software Foundation.  Apache2  Documentation - Apache HTTP Server
    - Core  routines -  Apache  Hooks.  2020.   -- URL:  <https://ci.apache.org/
    projects/httpd/trunk/doxygen/group__hooks.html> (online: 2021-03-11 08:37:51
    +0000)

[1615619857]

    The Apache Software Foundation.   Apache2 Documentation - Apache Portability
    Runtime library  - Hook  Functions.  2020.  --  URL: <https://ci.apache.org/
    projects/httpd/trunk/doxygen/group__APR__Util__Hook.html>           (online:
    2021-03-13 07:17:37 +0000)

[1615622955]

    The Apache Software Foundation.  Apache2  Documentation - Apache HTTP Server
    - Core routines  - module.  2020.  --  URL: <https://ci.apache.org/projects/
    httpd/trunk/doxygen/group__APACHE__CORE__CONFIG.html
    #ga0ea4f633a5f9f88e1603aaeb1f2b2e69> (online: 2021-03-13 08:09:15 +0000)

[1615623911]

    The Apache Software Foundation.  Apache2  Documentation - Apache HTTP Server
    - Core  routines -  AP_DECLARE_MODULE.   2020.   -- URL:  <https://ci.apache
    .org/projects/httpd/trunk/doxygen/group__APACHE__CORE__CONFIG.html
    #ga662f6bc4b401d52b293a80b1768534af> (online: 2021-03-13 08:25:11 +0000)

[1615309723]

    The Apache  Software Foundation.  apxs  - APache eXtenSion tool.   2020.  --
    URL:    <https://httpd.apache.org/docs/2.4/en/programs/apxs.html>   (online:
    2021-03-09 17:08:43 +0000)

    see also:
    bash$> man 1 apxs
    bash$> info apxs

Apache Portable Runtime

[1616085270]

    The Apache Software Foundation.  The Apache Portable Runtime Project.  2020.
    -- URL: <https://apr.apache.org/> (online: 2021-03-18 16:34:30 +0000)

[1616085431]

    The  Apache  Software  Foundation.   Apache  Portable  Runtime  Version  1.5
    Documentation.    2015.    --  URL:   <https://apr.apache.org/docs/apr/1.5/>
    (online: 2021-03-18 16:37:11 +0000)

[1616085582]

    The  Apache Software  Foundation.  Apache  Portable Runtime  Utility Library
    Version  1.5 Documentation.   2014.   -- URL:  <https://apr.apache.org/docs/
    apr-util/1.5/> (online: 2021-03-18 16:39:42 +0000)

[1616085734]

    The  Apache  Software Foundation.   Apache  Portable  Runtime Iconv  Library
    Version  1.2 Documentation.   2020.   -- URL:  <https://apr.apache.org/docs/
    apr-iconv/1.2/> (online: 2021-03-18 16:42:14 +000)

[1616241868]

    The Apache Software Foundation.  Apache  Portability Runtime library - Error
    Codes - APR Error  Values.  2020.  -- URL: <https://apr.apache.org/docs/apr/
    1.5/ group___a_p_r___error .html> (online: 2021-03-20 12:04:28)

Apache HTTP Request Library

[1616086484]

    The Apache  Software Foundation.   Apache HTTP  Request Library.   2020.  --
    URL: <https://httpd.apache.org/apreq/> (online: 2021-03-18 16:54:44 +0000)

[1616086620]

    The  Apache  Software  Foundation.  libapreq2  Version  2.13  Documentation.
    2010.   --  <URL:  https://httpd.apache.org/apreq/docs/libapreq2/>  (online:
    2021-03-18 16:57:00 +0000)

Apache Tutor

[1616182636]

    Nick  Kew.   Apache  Tutor.  2008.   --  URL:  <http://www.apachetutor.org/>
    (online: 2021-03-19 19:37:16 +0000)

[1616182934]

    Nick Kew.  Developer: Apache  Tutor.  2008.  -- URL: <http://www.apachetutor
    .org/dev/> (online: 2021-03-19 19:42:14 +0000)

[1616224574]

    Nick  Kew.   Request  Processing  in Apache.   2008.   --  URL:  <http://www
    .apachetutor.org/dev/request> (online: 2021-03-20 07:16:14 +0000)

[1616228006]

    Nick  Kew.    Configuration  for   Modules.   2008.   --   URL:  <http://www
    .apachetutor.org/dev/config> (online: 2021-03-20 08:13:26 +000)

[1616230447]

    Nick  Kew.   Resource Management  in  Apache.   2008.  --  URL:  <http://www
    .apachetutor.org/dev/pools> (online: 2021-03-20 08:54:07 +0000)

[1616236695]

    Nick  Kew.   Connection  Pooling  in Apache.   2008.   --  URL:  <http://www
    .apachetutor.org/dev/reslist> (online: 2021-03-20 10:38:15 +0000)

[1616237121]

    Nick Kew.   Introduction to Buckets  and Brigades.  2008.  --  URL: <http://
    www.apachetutor.org/dev/brigades> (online: 2021-03-20 10:45:21 +0000)

[1616238747]

    Nick Kew.  An architecture for smart  filtering in Apache.  -- URL: <http://
    www.apachetutor.org/dev/smart-filter> (online: 2021-03-20 11:12:27 +0000)

Embeddable Common-Lisp

Inoue Seiichiro APR Tutorial

[1616139849]

    Inoue  Seiichiro.  libapr  (apache portable  runtime) programming  tutorial.
    2005.     --   URL:    <http://dev.ariel-networks.com/apr/apr-tutorial/html/
    apr-tutorial.html> (online: 2021-03-19 07:44:09 +0000)

[1616174092]

    Inoue Seiichiro.   sample files.  2005.  --  URL: <http://dev.ariel-networks
    .com/apr/apr-tutorial/sample/> (online: 2021-03-19 17:14:52 +0000)

[1616174201]

    Inoue   Seiichiro.   sample-util   files.    2005.    --  URL:   <http://dev
    .ariel-networks.com/apr/apr-tutorial/sample-util/>    (online:    2021-03-19
    17:16:41 +0000)

Louis HÃ¶fler's mod_ecl

[1616138391]

    Louis HÃ¶fler.   mod_ecl for  Apache and embeddable  common lisp.   2010.  --
    URL: <http://mod-ecl.sourceforge.net/index.htm> (online: 2021-03-19 07:19:51
    +0000)

[1616138507]

    Louis HÃ¶fler.   mod_ecl.  2010.  --  URL: <https://sourceforge.net/projects/
    mod-ecl/> (online: 2021-03-19 07:21:47 +0000)

[1616138853]

    CLiki:  the common  lisp wiki.   CLiki: mod_ecl.   2010.  --  URL: <https://
    cliki.net/mod_ecl> (online: 2021-03-19 07:27:33 +0000)

================================================================================

Todo
----

* What is the file src/.debs for?

* Is it  better to  use apr_file_read  / apr_file_read_full,  apr_mmap_create or
  apr_bucket_mmap?

* Functions  to get  the data  or the  request: header_in  (request), header_out
  (response) and body.

* Functions to get  the data for restful services: DELETE,  GET, PATCH, POST and
  PUT.

  see https://www.restapitutorial.com/lessons/httpmethods.html
