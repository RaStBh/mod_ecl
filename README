This file is part of RaSt mod_ecl.

RaSt mod_ecl is an extension module for  the Apache HTTP Server.  It enables the
Apache  HTTP  Server  to  run  scripts written  in  the  Embeddable  Common-Lisp
language.

Copyright (c) 2021 Ralf Stephan (RaSt) <me@ralf-stephan.name>

Copying  and  distribution of  this  file,  with  or without  modification,  are
permitted in any  medium without royalty provided the copyright  notice and this
notice are preserved.  This file is offered as-is, without any warranty.

================================================================================

Contents
--------

About
Apache HTTP Server Module Development
mod_ecl Compilation and Installation
ASDF Configuration for Apache HTTP Server
Apache HTTP Server Configuration
Lisp / ECL / ASDF
HTTP Request Methods
HTML <form> enctype Attribute
Copying
Changelog
References

================================================================================

About
-----

mod_ecl is  a module for  the Apache HTTP  Server which contains  the Embeddable
Common-Lisp interpreter.  You can use it to run Lisp code, like you can run Perl
code with mod_perl or PHP code with mod_php.

================================================================================

Apache HTTP Server Module Development
-------------------------------------

My development environment is:

  Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-70-generic x86_64)
  Apache HTTP Server 2.4.41 (Ubuntu)
  Embeddable Common-Lisp (ECL) 16.1.3
  Embeddable Common-Lisp (ECL) 21.2.1
  Apache Portable Runtime (APR) 1.6.5
  Apache Portable Runtime Utility Library (APR-util) 1.6.1
  Apache HTTP Request Library (apreq) 2.13

To create an example module to test your environment and to use it as a starting
point for your own module you can generate a template module by using the APache
eXtenSion tool (apxs).

  bash$> apxs -g -n ecl

This creates the ecl/ directory and within the template files.

  ecl/.deps
  ecl/Makefile
  ecl/mod_ecl.c
  ecl/modules.mk

For mod_ecl these files are in <~/mod_ecl/src/>.

In <~/mod_ecl/src/mod_ecl.c> change

 if (strcmp(r->handler, "ecl"))
 {
   return DECLINED;
 }

to

 if (strcmp(r->handler, "application/x-httpd-ecl"))
 {
   return DECLINED;
 }

Using the example module the browser (e.g. lynx)

  bash> lynx https://localhost/test.ecl

should displays:

  The sample page from mod_ecl.c

================================================================================

mod_ecl Compilation and Installation
------------------------------------

You can download the source code from:

  https://github.com/RaStBh/mod_ecl
  https://gitlab.com/RaStBh/mod_ecl

Compile mod_ecl:

  bash> cd mod_ecl/src/
  bash> make

This is like compiling with the apsx tool:

  bash> apxs -c ./mod_ecl.c

Install mod_ecl (you might require root privileges to do this):

  bash> cd mod_ecl/src/
  bash> make install

This is like installing with the apsx tool (you might require root privileges to
do this):

  bash> apxs -i ./mod_ecl.la

The   extension   module   (the   mod_ecl.so   file)   is   installed   in   the
</usr/lib/apache2/modules/> directory.

To stop, sart  or reload the Apache  HTTP Server you can use  (you might require
root privileges to do this):

  bash> cd mod_ecl/src/
  bash> make stop
  bash> make start

  or

  bash> cd mod_ecl/src/
  bash> make restart

This is like using  the apachectl tool (you might require  root privileges to do
this):

  bash> apachectl stop
  bash> apachectl start

  or

  bash> apachectl restart

Alternativly you can use (you might require root privileges to do this):

  bash> /etc/init.d/apache stop
  bash> /etc/init.d/apache start

  or

  bash> /etc/init.d/apache restart

================================================================================

ASDF Configuration for Apache HTTP Server
-----------------------------------------

Configure your system  to use ASDF so  it finds the .ecl- and  .lisp-files in </
var/www/html/mod_ecl.lh.ld/>   and  writes   compiled   files  to   </var/cache/
common-lisp/>.

See section "Lisp / ECL / ASDF" for more information.

Create a symbolic  link from Apache HTTP Server DocumentRoot  directory (e.g. </
var/www/html/mod_ecl/>  to the  ecl and  lisp source  code directory  (e.g.  <~/
mod_ecl/doc/ecl/>).

As user www-data  create the compiled .o- and .-fas*-files  for the example ASDF
sytem utils-numbers (<mod_ecl/doc/ecl/utils-numbers/>) using:

  ecl> (require "asdf")
  ecl> (asdf:load-system :utils-numbers)

================================================================================

Apache HTTP Server Configuration
--------------------------------

In your virtual host configuration add  "index.ecl" to the list of the directory
index files:

  DirectoryIndex index.htm index.html index.php index.ecl

Create the </etc/apache2/mods-available/ecl.load> file with following content:

  # Load mod_ecl.

  LoadModule ecl_module /usr/lib/apache2/modules/mod_ecl.so

Create the </etc/apache2/mods-available/ecl.conf> file with following content:

  # Handle all files with file xtension .ecl by the mod_ecl module.

  <FilesMatch ".+\.ecl$">
    SetHandler application/x-httpd-ecl
  </FilesMatch>

  # Deny access to files without filename (e.g. ".ecl").

  <FilesMatch "^\.ecl$">
    Require all denied
  </FilesMatch>

Enable the extension  module using the a2enmod command.  You  might require root
privileges to do this.

  bash> a2enmod ecl

Restart the Apache  HTTP Server using the apachectl command.   You might require
root privileges to do this.

  bash> apachectl restart

  or

  bash> /etc/init.d/apache stop
  bash> /etc/init.d/apache start

Create a file (e.g. "test.ecl")  in </var/www/html/> containing some Lisp source
code.

  bash> echo "(eval-when (:execute)
                (defun test ()
                  (string \"I am test.ecl.\")
                )
                (princ (test))
              )" > /var/www/html/test.ecl

The  use your  browser (e.g.  lynx)  to display  the  header of  the request  ob
test.ecl.

  bash$> lynx -mime_header http://localhost/test.ecl

You should see something like:

  HTTP/1.1 200 OK
  Date: Sun, 08 Aug 2021 08:25:01 GMT
  Server: Apache/2.4.41 (Ubuntu)
  Content-Length: 0
  Connection: close
  Content-Type: text/html

  I am test.ecl.

Then display the output of "test.ecl" with your browser (e.g. lynx).

  bash$> lynx https://localhost/test.ecl

You should see something like:

  I am test.ecl.

================================================================================

Lisp / ECL / ASDF
-----------------



Directories
-----------

ASDF system wide directories:

  /usr/share/common-lisp/source/
  /usr/local/share/common-lisp/source/

ASDF per user directories:

  ~/.cache/common-lisp/
  ~/.config/common-lisp/
  ~/.config/common-lisp/source-registry.conf.d/
  ~/.local/share/common-lisp/source/
  ~/common-lisp/
  ~/common-lisp/asdf/

ECL directory:

/usr/lib/x86_64-linux-gnu/ecl-21.2.1/

Apache HTTP server document root:

  /var/www/html/mod_ecl.lh.ld/



ECL Quicklisp
-------------

setup quicklisp:

  ecl> (ecl-quicklisp)

per user quicklisp directory:

  ~/quicklisp/



Building files with ECL
-----------------------

Create single files:

+-------------------+--------------------------------------------------------------------------------------------+
|Portable FASL (fas)|ecl> (compile-file "./zip.lisp" :output-file "./zip.fas" :verbose t :print t :system-p nil) |
|                   |                                                                                            |
|                   |ecl> (compile-file "./zap.lisp" :output-file "./zap.fas" :verbose t :print t :system-p nil) |
|                   |                                                                                            |
|                   |ecl> (compile-file "./zop.lisp" :output-file "./zop.fas" :verbose t :print t :system-p nil) |
|                   +--------------------------------------------------------------------------------------------+
|                   |Problem:                                                                                    |
|                   |                                                                                            |
|                   |This removes the object files.                                                              |
+-------------------+--------------------------------------------------------------------------------------------+
|Native FASL (fasc) |ecl> (ext:install-bytecodes-compiler)                                                       |
|                   |     (compile-file "./zip.lisp" :output-file "./zip.fasc" :verbose t :print t :system-p nil)|
|                   |     (ext:install-c-compiler)                                                               |
|                   |                                                                                            |
|                   |ecl> (ext:install-bytecodes-compiler)                                                       |
|                   |     (compile-file "./zap.lisp" :output-file "./zap.fasc" :verbose t :print t :system-p nil)|
|                   |     (ext:install-c-compiler)                                                               |
|                   |                                                                                            |
|                   |ecl> (ext:install-bytecodes-compiler)                                                       |
|                   |     (compile-file "./zop.lisp" :output-file "./zop.fasc" :verbose t :print t :system-p nil)|
|                   |     (ext:install-c-compiler)                                                               |
+-------------------+--------------------------------------------------------------------------------------------+
|Object file (o)    |ecl> (compile-file "./zip.lisp" :output-file "./zip.o" :verbose t :print t :system-p t)     |
|                   |                                                                                            |
|                   |ecl> (compile-file "./zap.lisp" :output-file "./zap.o" :verbose t :print t :system-p t)     |
|                   |                                                                                            |
|                   |ecl> (compile-file "./zop.lisp" :output-file "./zop.o" :verbose t :print t :system-p t)     |
+-------------------+--------------------------------------------------------------------------------------------+

Create bundled file:

+-------------------+--------------------------------------------------------------------------------------------------------------------+
|Portable FASL (fas)|ecl> (c:build-fasl "./zipzapzop.fas" :lisp-files '("./zip.o" "./zap.o" "./zop.o"))                                  |
+-------------------+--------------------------------------------------------------------------------------------------------------------+
|Native FASL (fasc) |ecl> (with-open-file                                                                                                |
|                   |         (output "./zipzapzop.fasc"                                                                                 |
|                   |             :direction :output                                                                                     |
|                   |             ;:external-format '(:crlf :utf-8)                                                                      |
|                   |             :if-exists :supersede                                                                                  |
|                   |             :if-does-not-exist :create                                                                             |
|                   |         )                                                                                                          |
|                   |         (ext:run-program                                                                                           |
|                   |             "/usr/bin/cat"                                                                                         |
|                   |             '("./zip.fasc" "./zap.fasc" "./zop.fasc")                                                              |
|                   |             :output output                                                                                         |
|                   |         )                                                                                                          |
|                   |     )                                                                                                              |
|                   |                                                                                                                    |
|                   |or                                                                                                                  |
|                   |                                                                                                                    |
|                   |bash> /usr/bin/cat ./zip.fasc ./zap.fasc ./zop.fasc > ./zipzapzop.fasc                                              |
|                   +--------------------------------------------------------------------------------------------------------------------+
|                   |Problem:                                                                                                            |
|                   |                                                                                                                    |
|                   |ECL can load zipzapzop.fasc.                                                                                        |
|                   |You can call macros from zip.fasc.                                                                                  |
|                   |You can not call macros from zap.fasc.                                                                              |
|                   |You can not call macros from zop.fasc.                                                                              |
+-------------------+--------------------------------------------------------------------------------------------------------------------+
|Static library (a) |ecl> (c:build-static-library "./zipzapzop.a" :lisp-files '("./zip.o" "./zap.o" "./zop.o") :init-name "init_foobar") |
+-------------------+--------------------------------------------------------------------------------------------------------------------+
|Shared library (so)|ecl> (c:build-shared-library "./zipzapzop.so" :lisp-files '("./zip.o" "./zap.o" "./zop.o") :init-name "init_foobar")|
+-------------------+--------------------------------------------------------------------------------------------------------------------+
|Executable (bin)   |ecl> (c:build-program "./zipzapzop.bin" :lisp-files '("./zip.o" "./zap.o" "./zop.o"))                               |
+-------------------+--------------------------------------------------------------------------------------------------------------------+
|Image              |in ECL not supported                                                                                                |
+-------------------+--------------------------------------------------------------------------------------------------------------------+


Building files with ASDF
------------------------

ASDF global system configuration </etc/common-lisp/source-registry.conf>:

   (:source-registry
       (:tree "/var/www/html/mod_ecl.lh.ld/")
       :inherit-configuration
   )

ASDF local per user  (for user "www-data") configuration <~/.config/common-lisp/
source-registry.conf>:

   (:source-registry
       :inherit-configuration
   )

ASDF source registry  cache (for user "www-data") for each  ":tree" in global or
local configuration <~/mod_ecl/doc/ecl/.cl-source-registry.cache>:

   (:source-registry-cache
       "utils-numbers/utils-numbers.asd"
   )

   bash> /usr/bin/ecl asdf/tools/cl-source-registry-cache.lisp

ASDF  global   system  configuration  </etc/common-lisp/asdf-output-translations
.conf>:

    (:output-translations
        (t ("/var/cache/common-lisp/" :implementation))
        :inherit-configuration
    )

ASDF local per user <~/.config/common-lisp/asdf-output-translations.conf>:

    (:output-translations
        :inherit-configuration
    )

ASDF global system cache:

    /var/cache/common-lisp/

ASDF local per user cache:

    ~/.cache/common-lisp/

Symbolic link:

    /var/www/html/mod_ecl/ -> /home/vagrant/mod_ecl/doc/ecl/

+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
|Portable FASL (fasb)|ecl> (asdf:make-build :example :type :fasl :move-here #P"./example.fas/")                                                                                        |
|                    |                                                                                                                                                                 |
|                    |or                                                                                                                                                               |
|                    |                                                                                                                                                                 |
|                    |ecl> (asdf:operate 'asdf:compile-bundle-op :example)                                                                                                             |
|                    |                                                                                                                                                                 |
|                    |file example.fasb is then in |<~/.cache/common-lisp/ecl-21.2.1-unknown-linux-x64/home/vagrant/mod_ecl/doc/ecl/example/>                                          |
|                    |                                                                                                                                                                 |
|                    |or                                                                                                                                                               |
|                    |                                                                                                                                                                 |
|                    |ecl> (c:build-fasl "example.fasb" :lisp-files '("example.so"))                                                                                                   |
|                    |                                                                                                                                                                 |
|                    |or                                                                                                                                                               |
|                    |                                                                                                                                                                 |
|                    |ecl> (c:build-fasl "example.fasb" :lisp-files '("example.a"))                                                                                                    |
+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
|Static library (a)  |ecl> (asdf:make-build :example :type :static-library :move-here #P"./libexample.a/" :monolithic nil :init-name "init_example")                                   |
|                    |                                                                                                                                                                 |
|                    |or                                                                                                                                                               |
|                    |                                                                                                                                                                 |
|                    |ecl> (asdf:make-build :example :type :static-library :move-here #P"./libexample.a/" :monolithic t :init-name "init_example")                                     |
+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
|Shared library (so) |ecl> (asdf:make-build :example :type :shared-library :move-here #P"./libexample.so/" :monolithic nil :init-name "init_example")                                  |
|                    |                                                                                                                                                                 |
|                    |or                                                                                                                                                               |
|                    |                                                                                                                                                                 |
|                    |ecl> (asdf:make-build :example :type :shared-library :move-here #P"./libexample.so/" :monolithic t :init-name "init_example")                                    |
+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
|Executable (bin)    |ecl> (asdf:make-build :example :type :program :move-here #P"./example.bin/" :epilogue-code '(progn (require "asdf") (format t "~S~%" "Hello Worlds!") (si:exit)))|
+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+



ECL lisp and fas files
----------------------

/usr/lib/x86_64-linux-gnu/ecl-21.2.1/asdf.fas

cp -r ecl-21.2.1/contrib/ /usr/share/common-lisp/source/ecl-21.2.1/
cp -r ecl-21.2.1/src/clos/ /usr/share/common-lisp/source/ecl-21.2.1/src/
cp -r ecl-21.2.1/src/cmp/ /usr/share/common-lisp/source/ecl-21.2.1/src/
cp -r ecl-21.2.1/src/lsp/ /usr/share/common-lisp/source/ecl-21.2.1/src/

================================================================================

HTTP Request Methods
--------------------

These are the HTTP methods recognized by the Apache HTTP Server.  Sometimes they
are referred to as HTTP verbs.

see httpd.h

+------------------+------------------+------------+------------+
|Apache HTTP server|Apache HTTP server|RFC 7231    |RFC 5789    |
|                  |                  |            |            |
|method name       |method number     |            |            |
|                  |                  |            |            |
|[1628338196]      |[1628338196]      |[1626788793]|[1626789081]|
+==================+==================+============+============+
|GET               | 0                |X           |            |
+------------------+------------------+------------+------------+
|PUT               | 1                |X           |            |
+------------------+------------------+------------+------------+
|POST              | 2                |X           |            |
+------------------+------------------+------------+------------+
|DELETE            | 3                |X           |            |
+------------------+------------------+------------+------------+
|CONNECT           | 4                |X           |            |
+------------------+------------------+------------+------------+
|OPTIONS           | 5                |X           |            |
+------------------+------------------+------------+------------+
|TRACE             | 6                |X           |            |
+------------------+------------------+------------+------------+
|PATCH             | 7                |            |X           |
+------------------+------------------+------------+------------+
|PROPFIND          | 8                |            |            |
+------------------+------------------+------------+------------+
|PROPPATC          | 9                |            |            |
+------------------+------------------+------------+------------+
|MKCOL             |10                |            |            |
+------------------+------------------+------------+------------+
|COPY              |11                |            |            |
+------------------+------------------+------------+------------+
|MOVE              |12                |            |            |
+------------------+------------------+------------+------------+
|LOCK              |13                |            |            |
+------------------+------------------+------------+------------+
|UNLOCK            |14                |            |            |
+------------------+------------------+------------+------------+
|VERSION_CONTROL   |15                |            |            |
+------------------+------------------+------------+------------+
|CHECKOUT          |16                |            |            |
+------------------+------------------+------------+------------+
|UNCHECKOUT        |17                |            |            |
+------------------+------------------+------------+------------+
|CHECKIN           |18                |            |            |
+------------------+------------------+------------+------------+
|UPDATE            |19                |            |            |
+------------------+------------------+------------+------------+
|LABEL             |20                |            |            |
+------------------+------------------+------------+------------+
|REPORT            |21                |            |            |
+------------------+------------------+------------+------------+
|MKWORKSPACE       |22                |            |            |
+------------------+------------------+------------+------------+
|MKACTIVITY        |23                |            |            |
+------------------+------------------+------------+------------+
|BASELINE_CONTROL  |24                |            |            |
+------------------+------------------+------------+------------+
|MERGE             |25                |            |            |
+------------------+------------------+------------+------------+
|INVALID           |26                |            |            |
+------------------+------------------+------------+------------+
|HEAD              |                  |X           |            |
+------------------+------------------+------------+------------+

================================================================================

HTML <form> enctype Attribute
-----------------------------

see [1628339889]

application/x-www-form-urlencoded

  The browser sends form data with encoding.  (Default)

multipart/form-data

  The browser sends files using the form.

text/plain

  The browser sends the form data without any encoding.  (Not recommended)

================================================================================

Copying
-------

// RaSt mod_ecl is  an extension module for the Apache  HTTP Server.  It enables
// the Apache HTTP  Server to run scripts written in  the Embeddable Common-Lisp
// language.
//
// Copyright (c) 2021 Ralf Stephan (RaSt) <me@ralf-stephan.name>
//
// RaSt mod_ecl is free software: you can redistribute it and/or modify it under
// the terms of the GNU General Public License as published by the Free Software
// Foundation, either  version 3 of the  License, or (at your  option) any later
// version.
//
// RaSt mod_ecl is distributed  in the hope that it will  be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR  A PARTICULAR  PURPOSE.   See the  GNU General  Public  License for  more
// details.
//
// You should have received a copy of  the GNU General Public License along with
// RaSt     mod_ecl     in     the     file    COPYING.      If     not,     see
// <https://www.gnu.org/licenses/>.

================================================================================

Changelog
=========

0.0.0

  Nothing special here.

0.1.0

  This version is  a basic Apache HTTP Server extension  which does nothing more
  than to output the string "Hello World".

0.1.1

  Introducing doxygen for documentation.  Adding proper comments.  Small changes
  to the code.  And other changes.

0.1.2

  Add notes about usage.

0.1.3

  Add missing comment.

0.2.0

  Read file and output its content. And other changes.

0.2.1

  Fix whitespace and spelling.

0.2.2

  Add missing comment.

0.2.3

  Some Refactoring.

0.2.4

  Fix line break.

0.3.0

  Evaluate ECL script and output result.

0.4.0

  Get MIME header environment from the request.  Functions to search and replace
  by string and regex.

0.4.1

  Rebase development_of_0.4.0.

0.4.2

  Get MIME header environment from the response.

0.4.3

  Functions to get the HTTP method name and number.

0.4.4

  Get request data from get/post request

0.4.5

  Set content type from ECL script.

0.4.6

  Something went wrong with 0.4.5.

0.4.7

  Remove development test output.

1.0.0

  Nothing new.  It is like 0.4.7.  The first usable version for the common user.

2.0.0

  Start of major rewrite.  Fix spelling.

================================================================================

References
----------

Apache HTTP Server

[LL02] Ben Laurie, Peter Laurie.  Apache: The Definitive Guide.  O'Reilly Media,
  Inc..  3th Edition.  December 2002.  -- ISBN: 978-0-596-00203-9

[SM99] Lincoln Stein, Doug MacEachern.  Writing  Apache Modules with Perl and C.
  O'Reilly & Associates, Inc.  March 1999.  -- ISBN: 978-1-565-92567-0

[1615296743] The  Apache Software Foundation.   The Apache HTTP  Server Project.
  2020.  -- URL: <https://httpd.apache.org/> (online: 2021-03-09 13:32:23 +0000)

[1615297216] The  Apache Software  Foundation.  Apache  HTTP Server  Version 2.4
  Documentation.    2020.    --   URL:   <https://httpd.apache.org/docs/2.4/en/>
  (online: 2021-03-09 13:40:16 +0000)

  see also:
  /usr/share/doc/apache2-doc/

[1615297807] The  Apache Software  Foundation.  Developer Documentation  for the
  Apache HTTP  Server 2.4.   2020.  --  URL: <https://httpd.apache.org/docs/2.4/
  en/developer/> (online: 2021-03-09 13:50:07 +0000)

[1615449618] The  Apache Software  Foundation.   Module Index.   2020.  --  URL:
  <https://httpd.apache.org/docs/2.4/en/mod/>   (online:   2021-03-11   08:00:18
  +0000)

[1615449737] The Apache  Software Foundation.  Apache  Module mod_example_hooks.
  2020.   --   URL:  <https://httpd.apache.org/docs/2.4/en/mod/mod_example_hooks
  .html> (online: 2021-03-11 08:02:17 +0000)

  see also:
  httpd-2.4.25\modules\examples\
  httpd-2.4.25\modules\examples\README
  httpd-2.4.25\modules\examples\mod_case_filter.c
  httpd-2.4.25\modules\examples\mod_case_filter_in.c
  httpd-2.4.25\modules\examples\mod_example_hooks.c
  httpd-2.4.25\modules\examples\mod_example_ipc.c

[1615386286] The Apache  Software Foundation.  Apache Module  mod_so.  2020.  --
  URL:      <https://httpd.apache.org/docs/2.4/en/mod/mod_so.html>      (online:
  2021-03-10 14:24:46 +0000)

[1628327465] The  Apache  Software  Foundation.  Apache  Module  mod_substitute.
  2021.   --   URL:  <https://httpd.apache.org/docs/2.4/mod/mod_substitute.html>
  (online: 2021-08-07 09:11:05 +0000)

[1615298253] The Apache Software Foundation.   Developing modules for the Apache
  HTTP  Server  2.4.    2020.   --  URL:  <https://httpd.apache.org/docs/2.4/en/
  developer/modguide.html> (online: 2021-03-09 13:57:33 +0000)

[1615450908] The Apache Software Foundation.  Hook  Functions in the Apache HTTP
  Server 2.x.   2020.  --  URL: <https://httpd.apache.org/docs/2.4/en/developer/
  hooks.html> (online: 2021-03-11 08:21:48 +0000)

[1615451523] The Apache  Software Foundation.  Request Processing  in the Apache
  HTTP  Server  2.x.    2020.   --  URL:  <https://httpd.apache.org/docs/2.4/en/
  developer/request.html> (online: 2021-03-11 08:32:03 +0000)

[1615569331] The Apache  Software Foundation.  How  filters work in  Apache 2.0.
  2020.  --  URL: <https://httpd.apache.org/docs/2.4/en/developer/qfilters.html>
  (online: 2021-03-12 17:15:31 +0000)

[1615572244] The Apache  Software Foundation.  Guide to  writing output filters.
  2020.  --  URL: <https://httpd.apache.org/docs/2.4/en/developer/output-filters
  .html> (online: 2021-03-12 18:04:04 +0000)

[1615617303] The Apache  Software Foundation.   Documenting code in  Apache 2.4.
  2020.   --   URL:  <https://httpd.apache.org/docs/2.4/en/developer/documenting
  .html> (online: 2021-03-13 06:35:03 +0000)

[1615618803] The  Apache Software  Foundation.   Apache HTTP  Server 2.x  Thread
  Safety   Issues.    2020.   --   URL:   <https://httpd.apache.org/docs/2.4/en/
  developer/thread_safety.html> (online: 2021-03-13 07:00:03 +0000)

[1615625036] The  Apache  Software  Foundation.   Dynamic  Shared  Object  (DSO)
  Support.   2020.    --  <URL:  https://httpd.apache.org/docs/current/dso.html>
  (online: 2021-03-13 08:43:56 +0000)

[1615452234] The Apache Software Foundation.   Apache2 Documentation.  2020.  --
  URL: <https://ci.apache.org/projects> (online: 2021-03-11 08:43:54 +0000)

[1615451871] The  Apache Software  Foundation.  Apache2  Documentation -  Apache
  HTTP  Server -  Core  routines -  Apache Hooks.   2020.   -- URL:  <https://ci
  .apache.org/projects/httpd/trunk/doxygen/group__hooks.html>           (online:
  2021-03-11 08:37:51 +0000)

[1615619857] The  Apache Software  Foundation.  Apache2  Documentation -  Apache
  Portability  Runtime library  - Hook  Functions.  2020.   -- URL:  <https://ci
  .apache.org/projects/httpd/trunk/doxygen/group__APR__Util__Hook.html> (online:
  2021-03-13 07:17:37 +0000)

[1615622955] The  Apache Software  Foundation.  Apache2  Documentation -  Apache
  HTTP Server - Core routines  - module.  2020.  -- URL: <https://ci.apache.org/
  projects/httpd/trunk/doxygen/group__APACHE__CORE__CONFIG.html>        (online:
  2021-03-13 08:09:15 +0000)

[1615623911] The  Apache Software  Foundation.  Apache2  Documentation -  Apache
  HTTP Server -  Core routines - AP_DECLARE_MODULE.  2020.   -- URL: <https://ci
  .apache.org/projects/httpd/trunk/doxygen/group__APACHE__CORE__CONFIG.html>
  (online: 2021-03-13 08:25:11 +0000)

[1615309723] The  Apache Software  Foundation.   apxs -  APache eXtenSion  tool.
  2020.    --   URL:   <https://httpd.apache.org/docs/2.4/en/programs/apxs.html>
  (online: 2021-03-09 17:08:43 +0000)

  see also:
  bash$> man 1 apxs
  bash$> info apxs

[1628338196] The Apache Software Foundation.  Apache HTTP Server - Core routines
  - HTTP Daemon Routine  - List of Methods recognized by  the server.  2020.  --
  URL   <https://ci.apache.org/projects/httpd/trunk/doxygen/group__Methods.html>
  (online: 2021-08-07 12:09:56 +0000)

Apache Portable Runtime

[1616085270] The  Apache  Software  Foundation.   The  Apache  Portable  Runtime
  Project.   2020.    --  URL:  <https://apr.apache.org/>   (online:  2021-03-18
  16:34:30 +0000)

[1616085431]  The Apache  Software Foundation.   Apache Portable  Runtime Version
  1.5  Documentation.   2015.   --  URL:  <https://apr.apache.org/docs/apr/1.5/>
  (online: 2021-03-18 16:37:11 +0000)

[1616085582] The Apache  Software Foundation.   Apache Portable  Runtime Utility
  Library Version  1.5 Documentation.   2014.  --  URL: <https://apr.apache.org/
  docs/apr-util/1.5/> (online: 2021-03-18 16:39:42 +0000)

[1616085734] The  Apache Software  Foundation.   Apache  Portable Runtime  Iconv
  Library Version  1.2 Documentation.   2020.  --  URL: <https://apr.apache.org/
  docs/apr-iconv/1.2/> (online: 2021-03-18 16:42:14 +000)

[1616241868] The Apache Software Foundation.  Apache Portability Runtime library
  - Error Codes  - APR  Error Values.   2020.  --  URL: <https://apr.apache.org/
  docs/apr/1.5/group___a_p_r___error.html> (online: 2021-03-20 12:04:28)

Apache HTTP Request Library

[1616086484] The  Apache  Software  Foundation.  Apache  HTTP  Request  Library.
  2020.  -- URL:  <https://httpd.apache.org/apreq/> (online: 2021-03-18 16:54:44
  +0000)

[1616086620] The   Apache   Software   Foundation.    libapreq2   Version   2.13
  Documentation.     2010.    --    <URL:   https://httpd.apache.org/apreq/docs/
  libapreq2/> (online: 2021-03-18 16:57:00 +0000)

Apache Tutor

[1616182636] Nick Kew.   Apache Tutor.   2008.  --  URL: <http://www.apachetutor
  .org/> (online: 2021-03-19 19:37:16 +0000)

[1616182934] Nick  Kew.  Developer:  Apache Tutor.   2008.  --  URL: <http://www
  .apachetutor.org/dev/> (online: 2021-03-19 19:42:14 +0000)

[1616224574] Nick Kew.  Request  Processing in Apache.  2008.   -- URL: <http://
  www.apachetutor.org/dev/request> (online: 2021-03-20 07:16:14 +0000)

[1616228006] Nick Kew.   Configuration for Modules.  2008.   -- URL: <http://www
  .apachetutor.org/dev/config> (online: 2021-03-20 08:13:26 +000)

[1616230447] Nick Kew.  Resource Management  in Apache.  2008.  -- URL: <http://
  www.apachetutor.org/dev/pools> (online: 2021-03-20 08:54:07 +0000)

[1616236695] Nick Kew.  Connection  Pooling in Apache.  2008.   -- URL: <http://
  www.apachetutor.org/dev/reslist> (online: 2021-03-20 10:38:15 +0000)

[1616237121] Nick  Kew.  Introduction to  Buckets and Brigades.  2008.   -- URL:
  <http://www.apachetutor.org/dev/brigades> (online: 2021-03-20 10:45:21 +0000)

[1616238747] Nick Kew.  An architecture for  smart filtering in Apache.  -- URL:
  <http://www.apachetutor.org/dev/smart-filter>  (online:   2021-03-20  11:12:27
  0000)

Embeddable Common-Lisp

[1616254432] Common-Lisp.Net.  Embeddable Common-Lisp.  2021.  -- URL: <https://
  common-lisp.net/project/ecl/> (online: 2021-03-20 15:33:52 +0000)

[1616254992] Daniel Kochmański, Marius Gerbershagen.   ECL Manual 2020.  -- URL:
  <https://common-lisp.net/project/ecl/static/manual/>    (online:    2021-03-20
  15:43:12 +0000)

[1626599366] Embeddable  Common-Lisp main  repository.  --  URL: <https://gitlab
  .com/embeddable-common-lisp/ecl> (online: 2021-07-18 09:09:26 +0000)

[1626600165] The Distro Tracker Developers ecl  - Debian Package Tracker.  2021.
  -- URL:  <https://tracker.debian.org/pkg/ecl>   (online:  2021-07-18  09:22:45
  +0000)

[1626600301] SPI Inc..  Debian -- Informationen  über Paket ecl in buster.  2021
  -- URL: <https://packages.debian.org/buster/ecl>  (online: 2021-07-18 09:25:01
  +0000)

[1626599822] ecl     packaging.       --     URL:     <https://salsa.debian.org/
  common-lisp-team/ecl> (online: 2021-07-18 09:17:02 +0000)

Inoue Seiichiro APR Tutorial

[1616139849] Inoue  Seiichiro.   libapr  (apache portable  runtime)  programming
  tutorial.   2005.   --  URL:  <http://dev.ariel-networks.com/apr/apr-tutorial/
  html/apr-tutorial.html> (online: 2021-03-19 07:44:09 +0000)

[1616174092] Inoue  Seiichiro.   sample  files.    2005.   --  URL:  <http://dev
  .ariel-networks.com/apr/apr-tutorial/sample/>  (online:   2021-03-19  17:14:52
  +0000)

[1619079595] The Common Lisp Cookbook Project.  The Common Lisp Cookbook.  2007.
 -- URL:  <http://cl-cookbook.sourceforge.net/>   (online:  2021-04-22  08:19:55
 +0000)

[1616174201] Inoue Seiichiro.   sample-util files.   2005.  --  URL: <http://dev
  .ariel-networks.com/apr/apr-tutorial/sample-util/>     (online:     2021-03-19
  17:16:41 +0000)

Common Lisp

[Sei05] Peter Seibel.   Practical Common Lisp.  2005.   Apress / Springer-Verlag
  GmbH & Co. KG -- ISBN: 1-59059-239-5

[Ste90] Guy L. Steele.  Common Lisp  the Language.  1990.  2nd Edition.  Digital
  Press --  ISBN: 1-55558-041-6 --  URL: <https://www.cs.cmu.edu/Groups/AI/html/
  cltl/cltl2.html> (online:  2021-04-22 07:15:30 +0000) --  URL: <https://www.cs
  .cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/lang/lisp/doc/cltl/cltl_ht
  .tgz> (online: 2021-04-22 07:51:20 +0000)

[1619075374] LispWorks Ltd.  Common Lisp  HyperSpec.  2005.  -- URL: <http://www
  .lispworks.com/documentation/HyperSpec/Front/index.htm>   (online:  2021-04-22
  07:09:34   +0000)    --   URL:   <http://ftp.lispworks.com/pub/software_tools/
  reference/HyperSpec-7-0.tar.gz> (online: 2021-04-22 07:48:56 +0000)

ASDF

[1626594915] Robert  P.  Goldman,  Francois-Rene Rideau.   ASDF Manual.   2001 -
  2019.   --  URL: <https://common-lisp.net/project/asdf/asdf.html>  (2021-07-18
  07:55:15 +0000)

Louis Höfler's mod_ecl

[1616138391] Louis  Höfler.   mod_ecl for  Apache  and  embeddable common  lisp.
  2010.  -- URL:  <http://mod-ecl.sourceforge.net/index.htm> (online: 2021-03-19
  07:19:51 +0000)

[1616138507] Louis Höfler.   mod_ecl.  2010.  --  URL: <https://sourceforge.net/
  projects/mod-ecl/> (online: 2021-03-19 07:21:47 +0000)

[1616138853] CLiki:  the common  lisp  wiki.  CLiki:  mod_ecl.   2010.  --  URL:
  <https://cliki.net/mod_ecl> (online: 2021-03-19 07:27:33 +0000)

[1616335928] CLiki: the  common lisp wiki.   ECL in Apache: mod_ecl.   2010.  --
  URL:     <https://common-lisp.net/project/ecl/posts/ECL-in-Apache-modecl.html>
  (online: 2021-03-21 14:12:08 +0000)

RFCs / HTTP Request Methods / RESTful Services

[1626788793] R. Fielding,  J. Reschke.  Hypertext Transfer  Protocol (HTTP/1.1):
  Semantics and Content.  June  2014.  -- URL: <https://www.rfc-editor.org/info/
  rfc7231>  (online: 2021-07-20  13:46:33  +0000)  -- URL:  <https://datatracker
  .ietf.org/doc/html/rfc7231> (online: 2021-07-20 13:47:59 +0000)

[1626789081] L.  Dusseault, J.  Snell.  PATCH  Method for HTTP.  March 2010.  --
  URL:  <https://www.rfc-editor.org/info/rfc5789>  (online: 2021-07-20  13:51:21
  +0000)   --   URL:  <https://datatracker.ietf.org/doc/html/rfc5789>   (online:
  2021-07-20 13:49:56 +0000)

[1626790959] Todd  Fredrich.  REST  API  Tutorial.  2021.   -- URL  <https://www
  .restapitutorial.com/> (online: 2021-07-20 14:22:39 +0000)

[1628336533] Mozilla and individual contributors.   HTTP request methods.  2021.
  -- URL:  <https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods>  (online:
  2021-08-07 11:42:13 +0000)

HTML <form> enctype Attribute

[1628339889] Refsnes  Data.   HTML  <form>  enctype Attribute.   2021.   --  URL
  <https://www.w3schools.com/TAGs/att_form_enctype.asp>    (online:   2021-08-07
  12:38:09 +0000)
